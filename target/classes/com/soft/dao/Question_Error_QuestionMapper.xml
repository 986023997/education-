<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soft.dao.Question_Error_QuestionMapper" >
  <resultMap id="BaseResultMap" type="com.soft.model.Question_Error_Question" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="Stu_id" property="stuId" jdbcType="INTEGER" />
    <result column="Question_id" property="questionId" jdbcType="INTEGER" />
    <result column="Answer_type" property="answerType" jdbcType="VARCHAR" />
    <result column="Create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="Create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="Modify_by" property="modifyBy" jdbcType="VARCHAR" />
    <result column="Modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="Status" property="status" jdbcType="BIT" />
    <result column="Version" property="version" jdbcType="INTEGER" />
    <result column="Corp_id" property="corpId" jdbcType="INTEGER" />
  </resultMap>
 <resultMap id="123Map" type="com.soft.model.Question_Question" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="Couser_id" property="couserId" jdbcType="INTEGER" />
    <result column="Question_content" property="questionContent" jdbcType="VARCHAR" />
    <result column="Picture_url" property="pictureUrl" jdbcType="VARCHAR" />
    <result column="Option_a" property="optionA" jdbcType="VARCHAR" />
    <result column="Option_b" property="optionB" jdbcType="VARCHAR" />
    <result column="Option_c" property="optionC" jdbcType="VARCHAR" />
    <result column="Option_d" property="optionD" jdbcType="VARCHAR" />
    <result column="Answer" property="answer" jdbcType="VARCHAR" />
    <result column="Score" property="score" jdbcType="DOUBLE" />
    <result column="Corp_id" property="corpId" jdbcType="INTEGER" />
    <result column="Create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="Create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="Modify_by" property="modifyBy" jdbcType="VARCHAR" />
    <result column="Modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="Status" property="status" jdbcType="BIT" />
    <result column="Version" property="version" jdbcType="INTEGER" />
    <result column="Question_type_id" property="questionTypeId" jdbcType="INTEGER" />
  </resultMap> 
  
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, Stu_id, Question_id, Answer_type, Create_by, Create_time, Modify_by, Modify_time, 
    Status, Version, Corp_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.soft.model.Question_Error_QuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question_error_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from question_error_question
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question_error_question
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.soft.model.Question_Error_QuestionExample" >
    delete from question_error_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.soft.model.Question_Error_Question" >
    insert into question_error_question (Id, Stu_id, Question_id, 
      Answer_type, Create_by, Create_time, 
      Modify_by, Modify_time, Status, 
      Version, Corp_id)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, 
      #{answerType,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyBy,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT}, 
      #{version,jdbcType=INTEGER}, #{corpId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.soft.model.Question_Error_Question" >
    insert into question_error_question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="stuId != null" >
        Stu_id,
      </if>
      <if test="questionId != null" >
        Question_id,
      </if>
      <if test="answerType != null" >
        Answer_type,
      </if>
      <if test="createBy != null" >
        Create_by,
      </if>
      <if test="createTime != null" >
        Create_time,
      </if>
      <if test="modifyBy != null" >
        Modify_by,
      </if>
      <if test="modifyTime != null" >
        Modify_time,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="version != null" >
        Version,
      </if>
      <if test="corpId != null" >
        Corp_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null" >
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="answerType != null" >
        #{answerType,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null" >
        #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="corpId != null" >
        #{corpId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.soft.model.Question_Error_QuestionExample" resultType="java.lang.Integer" >
  select count(*) from question_error_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question_error_question
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null" >
        Stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.questionId != null" >
        Question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.answerType != null" >
        Answer_type = #{record.answerType,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        Create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        Create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyBy != null" >
        Modify_by = #{record.modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        Modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.version != null" >
        Version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.corpId != null" >
        Corp_id = #{record.corpId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question_error_question
    set Id = #{record.id,jdbcType=INTEGER},
      Stu_id = #{record.stuId,jdbcType=INTEGER},
      Question_id = #{record.questionId,jdbcType=INTEGER},
      Answer_type = #{record.answerType,jdbcType=VARCHAR},
      Create_by = #{record.createBy,jdbcType=VARCHAR},
      Create_time = #{record.createTime,jdbcType=TIMESTAMP},
      Modify_by = #{record.modifyBy,jdbcType=VARCHAR},
      Modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      Status = #{record.status,jdbcType=BIT},
      Version = #{record.version,jdbcType=INTEGER},
      Corp_id = #{record.corpId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.soft.model.Question_Error_Question" >
    update question_error_question
    <set >
      <if test="stuId != null" >
        Stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null" >
        Question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="answerType != null" >
        Answer_type = #{answerType,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        Create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        Create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null" >
        Modify_by = #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        Modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=BIT},
      </if>
      <if test="version != null" >
        Version = #{version,jdbcType=INTEGER},
      </if>
      <if test="corpId != null" >
        Corp_id = #{corpId,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soft.model.Question_Error_Question" >
    update question_error_question
    set Stu_id = #{stuId,jdbcType=INTEGER},
      Question_id = #{questionId,jdbcType=INTEGER},
      Answer_type = #{answerType,jdbcType=VARCHAR},
      Create_by = #{createBy,jdbcType=VARCHAR},
      Create_time = #{createTime,jdbcType=TIMESTAMP},
      Modify_by = #{modifyBy,jdbcType=VARCHAR},
      Modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      Status = #{status,jdbcType=BIT},
      Version = #{version,jdbcType=INTEGER},
      Corp_id = #{corpId,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectErrorQuestionByStu" parameterType="java.lang.Integer" resultMap="123Map">
  
  select p.* from question_question p,question_error_question e where p.id=e.Question_id and Stu_id=#{stuId}
  
  
  
  </select>
  

  
  
  
</mapper>